"""Class used for reading VCF files generated by GBS tools and pipelines.
"""

import csv
from typing import List

from src.variantsite import VariantSite


class GbsVcfReader:
    """Opens GBS VCF file and reads it variant-by-variant.

    Usable as a context manager (within with-statements). Extracts sample names
    from the VCF header metadata. Iterate over the reader to retrieve one
    VariantSite object per VCF row.

    Attributes:
        input_vcf:
            Input VCF file handle.
        vcf_reader:
            CSV reader object, treating input VCF file as tab-separated values.
        sample_names:
            List of strings containing sample identifiers from VCF header.
    """

    def __init__(self, input_vcf_filepath: str):
        self.input_vcf = open(input_vcf_filepath, encoding='utf-8')
        self.vcf_reader = csv.reader(
            self.input_vcf, delimiter='\t', lineterminator='\n'
        )
        self.sample_names: List[str] = []
        self._load_metadata()

    def _load_metadata(self):
        """Parse the initial metadata rows of VCF file to retrieve sample names.
        """
        for line in self.vcf_reader:
            if line[0] == '#CHROM':
                self.sample_names = line[9:]
                break
            if line[0][0] == '#':
                # Ignoring other metadata
                continue

    def __enter__(self):
        return self

    def __exit__(self, *args):
        self.input_vcf.close()

    def __iter__(self):
        return self

    def __next__(self):
        line = next(self.vcf_reader)
        return VariantSite(line, self.sample_names)
